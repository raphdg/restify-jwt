{
  "_args": [
    [
      {
        "raw": "restify-jwt@github:ygotthilf/restify-jwt",
        "scope": null,
        "escapedName": "restify-jwt",
        "name": "restify-jwt",
        "rawSpec": "github:ygotthilf/restify-jwt",
        "spec": "github:ygotthilf/restify-jwt",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:ygotthilf/restify-jwt.git",
          "sshUrl": "git+ssh://git@github.com/ygotthilf/restify-jwt.git",
          "httpsUrl": "git+https://github.com/ygotthilf/restify-jwt.git",
          "gitUrl": "git://github.com/ygotthilf/restify-jwt.git",
          "shortcut": "github:ygotthilf/restify-jwt",
          "directUrl": "https://raw.githubusercontent.com/ygotthilf/restify-jwt/master/package.json"
        }
      },
      "/Users/raph/Projects/external/Focus/server"
    ]
  ],
  "_from": "ygotthilf/restify-jwt",
  "_id": "restify-jwt@0.1.0",
  "_inCache": true,
  "_location": "/restify-jwt",
  "_phantomChildren": {
    "backoff": "2.5.0",
    "buffer-equal-constant-time": "1.0.1",
    "bunyan": "1.8.8",
    "concat-stream": "1.4.10",
    "core-util-is": "1.0.2",
    "csv": "0.4.6",
    "ctype": "0.5.3",
    "deep-equal": "0.2.2",
    "ecdsa-sig-formatter": "1.0.9",
    "escape-regexp-component": "1.0.2",
    "formidable": "1.1.1",
    "keep-alive-agent": "0.0.1",
    "meow": "2.0.0",
    "mime": "1.3.4",
    "node-uuid": "1.4.7",
    "once": "1.4.0"
  },
  "_requested": {
    "raw": "restify-jwt@github:ygotthilf/restify-jwt",
    "scope": null,
    "escapedName": "restify-jwt",
    "name": "restify-jwt",
    "rawSpec": "github:ygotthilf/restify-jwt",
    "spec": "github:ygotthilf/restify-jwt",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:ygotthilf/restify-jwt.git",
      "sshUrl": "git+ssh://git@github.com/ygotthilf/restify-jwt.git",
      "httpsUrl": "git+https://github.com/ygotthilf/restify-jwt.git",
      "gitUrl": "git://github.com/ygotthilf/restify-jwt.git",
      "shortcut": "github:ygotthilf/restify-jwt",
      "directUrl": "https://raw.githubusercontent.com/ygotthilf/restify-jwt/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/ygotthilf/restify-jwt.git#79986d964a261f8c2ad5051e58800e4733abd8ca",
  "_shasum": "642d36d39aff8cc4ae6af7eed18462f51e8dfb8f",
  "_shrinkwrap": null,
  "_spec": "restify-jwt@github:ygotthilf/restify-jwt",
  "_where": "/Users/raph/Projects/external/Focus/server",
  "author": {
    "name": "Vikrant Varma",
    "email": "vikrant.varma94@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/amrav/restify-jwt/issues"
  },
  "dependencies": {
    "express-unless": "0.1.0",
    "jsonwebtoken": "^4.2.1",
    "restify": "^2.8.5"
  },
  "description": "JWT authentication middleware.",
  "devDependencies": {
    "mocha": "1.x.x"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "gitHead": "79986d964a261f8c2ad5051e58800e4733abd8ca",
  "homepage": "https://github.com/amrav/restify-jwt#readme",
  "keywords": [
    "auth",
    "authn",
    "authentication",
    "authz",
    "authorization",
    "http",
    "jwt",
    "token",
    "oauth",
    "restify"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "name": "restify-jwt",
  "optionalDependencies": {},
  "readme": "# restify-jwt\n\n[![Build Status](https://travis-ci.org/amrav/restify-jwt.svg)](https://travis-ci.org/amrav/restify-jwt)\n\n[Restify](http://mcavage.me/node-restify/) middleware that validates JsonWebTokens and sets `req.user`.\n\nThis module lets you authenticate HTTP requests using JWT tokens in your restify applications.\n\n## Install\n\n    $ npm install restify-jwt\n\n## Usage\n\nThe JWT authentication middleware authenticates callers using a JWT.\nIf the token is valid, `req.user` will be set with the JSON object decoded\nto be used by later middleware for authorization and access control.\n\nFor example,\n\n```javascript\nvar jwt = require('restify-jwt');\n\napp.get('/protected',\n  jwt({secret: 'shhhhhhared-secret'}),\n  function(req, res) {\n    if (!req.user.admin) return res.send(401);\n    res.send(200);\n  });\n```\n\nYou can specify audience and/or issuer as well:\n\n```javascript\njwt({ secret: 'shhhhhhared-secret',\n  audience: 'http://myapi/protected',\n  issuer: 'http://issuer' })\n```\n\n> If the JWT has an expiration (`exp`), it will be checked.\n\nOptionally you can make some paths unprotected as follows:\n\n```javascript\napp.use(jwt({ secret: 'shhhhhhared-secret'}).unless({path: ['/token']}));\n```\n\nThis is especially useful when applying to multiple routes.\n\nThis module also support tokens signed with public/private key pairs. Instead of a secret, you can specify a Buffer with the public key\n\n```javascript\nvar publicKey = fs.readFileSync('/pat/to/public.pub');\njwt({ secret: publicKey });\n```\n\nBy default, the decoded token is attached to `req.user` but can be configured with the `userProperty` option.\n\n```javascript\njwt({ secret: publicKey, userProperty: 'auth' });\n```\n\nYou might want to use this module to identify registered users without preventing unregistered clients to access to some data, you\ncan do it using the option _credentialsRequired_:\n\n    app.use(jwt({\n      secret: 'hello world !',\n      credentialsRequired: false\n    }));\n\n## Tests\n\n    $ npm install\n    $ npm test\n\n## Credits\n\nForked from [auth0/express-jwt](https://github.com/auth0/express-jwt). The major difference is that restify-jwt tries to use built in restify errors wherever possible.\n\n## License\n\nThis project is licensed under the MIT license. See the [LICENSE](LICENSE.txt) file for more info.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/amrav/restify-jwt.git"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "version": "0.1.0"
}
